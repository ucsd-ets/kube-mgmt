{{- $cn := printf "%s.%s.svc" ( include "opa.fullname" . ) .Values.global.namespace }}
{{- $ca := genCA "opa-admission-ca" 3650 -}}
{{- $cert := genSignedCert $cn nil (list $cn) 3650 $ca -}}
{{- if .Values.global.admissionController.enabled }}
kind: {{ .Values.admissionController.kind }}
apiVersion: {{ include "opa.admissionregistrationApiVersion" . }}
metadata:
  name: {{ template "opa.fullname" . }}-validating
  namespace: {{ .Values.global.namespace }}
  annotations:
{{- if .Values.global.certManager.enabled }}
    certmanager.k8s.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace (include "opa.rootCACertificate" .) | quote }}
    cert-manager.io/inject-ca-from: {{ printf "%s/%s" .Release.Namespace (include "opa.rootCACertificate" .) | quote }}
{{- end }}
{{- if .Values.global.admissionController.annotations }}
{{ toYaml .Values.global.admissionController.annotations | indent 4 }}
{{- end }}
  labels:
{{ include "opa.labels.standard" . | indent 4 }}
webhooks:
  - name: validating-webhook.openpolicyagent.org
    admissionReviewVersions: ["v1beta1"]
{{- with .Values.global.admissionController.namespaceSelector }}
    namespaceSelector:
{{ toYaml . | indent 6 }}
{{ end }}
    failurePolicy: {{ .Values.global.admissionController.failurePolicy }}
    rules:
{{ toYaml .Values.global.admissionController.rules | indent 6 }}
    clientConfig:
{{- if not .Values.global.certManager.enabled }}
{{- if .Values.global.generateCerts }}
      caBundle: {{ b64enc $ca.Cert }}
{{- else }}
      caBundle: {{ .Values.global.CA }}
{{- end }}
{{- end }}
      service:
        name: {{ template "opa.fullname" . }}
        namespace: {{ .Values.global.namespace }}
    sideEffects: {{ .Values.global.admissionController.sideEffect }}
{{- if .Values.timeoutSeconds }}
    timeoutSeconds: {{ .Values.timeoutSeconds }}
{{- end }}
{{- end }}
---
# {{- if .Values.global.certManager.enabled }}
# # Create a selfsigned Issuer, in order to create a root CA certificate for
# # signing webhook serving certificates
# apiVersion: {{ include "opa.certManagerApiVersion" . }}
# kind: Issuer
# metadata:
# {{- if .Values.global.admissionController.annotations }}
#   annotations:
# {{ toYaml .Values.global.admissionController.annotations | indent 4 }}
# {{- end }}
#   name: {{ include "opa.selfSignedIssuer" . }}
#   labels:
# {{ include "opa.labels.standard" . | indent 4 }}
# spec:
#   selfSigned: {}
# ---
# # Generate a CA Certificate used to sign certificates for the webhook
# apiVersion: {{ include "opa.certManagerApiVersion" . }}
# kind: Certificate
# metadata:
# {{- if .Values.global.admissionController.annotations }}
#   annotations:
# {{ toYaml .Values.global.admissionController.annotations | indent 4 }}
# {{- end }}
#   name: {{ include "opa.rootCACertificate" . }}
#   labels:
# {{ include "opa.labels.standard" . | indent 4 }}
# spec:
#   secretName: {{ include "opa.rootCACertificate" . }}
#   duration: {{ .Values.global.certManager.rootCACertificateDuration | quote }}
#   issuerRef:
#     name: {{ include "opa.selfSignedIssuer" . }}
#   commonName: "ca.webhook.opa"
#   isCA: true
# ---
# # Create an Issuer that uses the above generated CA certificate to issue certs
# apiVersion: {{ include "opa.certManagerApiVersion" . }}
# kind: Issuer
# metadata:
# {{- if .Values.global.admissionController.annotations }}
#   annotations:
# {{ toYaml .Values.global.admissionController.annotations | indent 4 }}
# {{- end }}
#   name: {{ include "opa.rootCAIssuer" . }}
#   labels:
# {{ include "opa.labels.standard" . | indent 4 }}
# spec:
#   ca:
#     secretName: {{ include "opa.rootCACertificate" . }}
# ---
# # Finally, generate a serving certificate for the webhook to use
# apiVersion: {{ include "opa.certManagerApiVersion" . }}
# kind: Certificate
# metadata:
# {{- if .Values.global.admissionController.annotations }}
#   annotations:
# {{ toYaml .Values.global.admissionController.annotations | indent 4 }}
# {{- end }}
#   name: {{ include "opa.servingCertificate" . }}
#   labels:
# {{ include "opa.labels.standard" . | indent 4 }}
# spec:
#   secretName: {{ template "opa.fullname" . }}-cert
#   duration: {{ .Values.global.certManager.servingCertificateDuration | quote }}
#   issuerRef:
#     name: {{ include "opa.rootCAIssuer" . }}
#   dnsNames:
#   - {{ include "opa.fullname" . }}
#   - {{ include "opa.fullname" . }}.{{ .Values.global.namespace }}
#   - {{ include "opa.fullname" . }}.{{ .Values.global.namespace }}.svc
# {{- end }}

